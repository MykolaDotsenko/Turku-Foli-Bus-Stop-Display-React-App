{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Turku bus stop\\\\bus-stop-display\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport BusStopForm from './components/BusStopForm';\nimport BusStopDisplay from './components/BusStopDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://data.foli.fi/siri/sm/';\nconst App = () => {\n  _s();\n  const [stopNumber, setStopNumber] = useState('');\n  const [stopName, setStopName] = useState('');\n  const [arrivals, setArrivals] = useState([]);\n  const [error, setError] = useState(null);\n  const [currentTime, setCurrentTime] = useState(new Date().toLocaleTimeString());\n  const fetchArrivals = async stopNumber => {\n    try {\n      const response = await axios.get(`${API_URL}${stopNumber}`);\n      setStopName(response.data.stopname);\n      setArrivals(response.data.result);\n      setError(null);\n    } catch (error) {\n      setStopName('');\n      setArrivals([]);\n      setError('Error fetching arrival data');\n    }\n  };\n  useEffect(() => {\n    if (stopNumber) {\n      fetchArrivals(stopNumber);\n    }\n\n    // Auto-update every 30 seconds\n    const interval = setInterval(() => {\n      if (stopNumber) {\n        fetchArrivals(stopNumber);\n      }\n    }, 30000);\n    return () => clearInterval(interval);\n  }, [stopNumber]);\n  useEffect(() => {\n    // Update current time every second\n    const interval = setInterval(() => {\n      setCurrentTime(new Date().toLocaleTimeString());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  const handleSubmit = newStopNumber => {\n    setStopNumber(newStopNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bus Stop Display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BusStopForm, {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this), stopName && /*#__PURE__*/_jsxDEV(BusStopDisplay, {\n      stopName: stopName,\n      arrivals: arrivals,\n      currentTime: currentTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"LvKP28x6Hvf8JUS1VE+c5eG3GFI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","BusStopForm","BusStopDisplay","jsxDEV","_jsxDEV","API_URL","App","_s","stopNumber","setStopNumber","stopName","setStopName","arrivals","setArrivals","error","setError","currentTime","setCurrentTime","Date","toLocaleTimeString","fetchArrivals","response","get","data","stopname","result","interval","setInterval","clearInterval","handleSubmit","newStopNumber","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Turku bus stop/bus-stop-display/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport BusStopForm from './components/BusStopForm';\nimport BusStopDisplay from './components/BusStopDisplay';\n\nconst API_URL = 'http://data.foli.fi/siri/sm/';\n\nconst App = () => {\n  const [stopNumber, setStopNumber] = useState('');\n  const [stopName, setStopName] = useState('');\n  const [arrivals, setArrivals] = useState([]);\n  const [error, setError] = useState(null);\n  const [currentTime, setCurrentTime] = useState(new Date().toLocaleTimeString());\n\n  const fetchArrivals = async (stopNumber) => {\n    try {\n      const response = await axios.get(`${API_URL}${stopNumber}`);\n      setStopName(response.data.stopname);\n      setArrivals(response.data.result);\n      setError(null);\n    } catch (error) {\n      setStopName('');\n      setArrivals([]);\n      setError('Error fetching arrival data');\n    }\n  };\n\n  useEffect(() => {\n    if (stopNumber) {\n      fetchArrivals(stopNumber);\n    }\n\n    // Auto-update every 30 seconds\n    const interval = setInterval(() => {\n      if (stopNumber) {\n        fetchArrivals(stopNumber);\n      }\n    }, 30000);\n\n    return () => clearInterval(interval);\n  }, [stopNumber]);\n\n  useEffect(() => {\n    // Update current time every second\n    const interval = setInterval(() => {\n      setCurrentTime(new Date().toLocaleTimeString());\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const handleSubmit = (newStopNumber) => {\n    setStopNumber(newStopNumber);\n  };\n\n  return (\n    <div>\n      <h1>Bus Stop Display</h1>\n      <BusStopForm onSubmit={handleSubmit} />\n      {error && <p>{error}</p>}\n      {stopName && <BusStopDisplay stopName={stopName} arrivals={arrivals} currentTime={currentTime} />}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}